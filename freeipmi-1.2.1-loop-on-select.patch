From a58f81aee6ed55670bba8f313485439cfdce02a3 Mon Sep 17 00:00:00 2001
From: chu11 <chu11@f7bdd6f0-feb3-4745-876d-a5d75e847258>
Date: Fri, 14 Nov 2014 22:05:20 +0000
Subject: [PATCH] Loop on select() call if interrupted by EINTR

---
 libfreeipmi/driver/ipmi-openipmi-driver.c | 37 ++++++++++++++++++++-----
 libfreeipmi/driver/ipmi-ssif-driver.c     | 45 ++++++++++++++++++++++++-------
 libfreeipmi/driver/ipmi-sunbmc-driver.c   | 37 ++++++++++++++++++++-----
 3 files changed, 97 insertions(+), 22 deletions(-)

diff --git a/libfreeipmi/driver/ipmi-openipmi-driver.c b/libfreeipmi/driver/ipmi-openipmi-driver.c
index fe5e250..69f7f55 100644
--- a/libfreeipmi/driver/ipmi-openipmi-driver.c
+++ b/libfreeipmi/driver/ipmi-openipmi-driver.c
@@ -489,7 +489,7 @@ _openipmi_read (ipmi_openipmi_ctx_t ctx,
   struct ipmi_system_interface_addr rs_addr;
   struct ipmi_recv rs_packet;
   fd_set read_fds;
-  struct timeval tv;
+  struct timeval tv, tv_orig, start, end, delta;
   int n;
 
   assert (ctx);
@@ -507,16 +507,41 @@ _openipmi_read (ipmi_openipmi_ctx_t ctx,
   tv.tv_sec = IPMI_OPENIPMI_TIMEOUT;
   tv.tv_usec = 0;
 
-  if ((n = select (ctx->device_fd + 1,
-                   &read_fds,
-                   NULL,
-                   NULL,
-                   &tv)) < 0)
+  tv_orig.tv_sec = tv.tv_sec;
+  tv_orig.tv_usec = tv.tv_usec;
+
+  if (gettimeofday (&start, NULL) < 0)
     {
       OPENIPMI_ERRNO_TO_OPENIPMI_ERRNUM (ctx, errno);
       return (-1);
     }
 
+  do {
+    if ((n = select (ctx->device_fd + 1,
+		     &read_fds,
+		     NULL,
+		     NULL,
+		     &tv)) < 0)
+      {
+	if (errno != EINTR)
+	  {
+	    OPENIPMI_ERRNO_TO_OPENIPMI_ERRNUM (ctx, errno);
+	    return (-1);
+	  }
+
+	if (gettimeofday (&end, NULL) < 0)
+	  {
+	    OPENIPMI_ERRNO_TO_OPENIPMI_ERRNUM (ctx, errno);
+	    return (-1);
+	  }
+	
+	/* delta = end - start */
+	timersub (&end, &start, &delta);
+	/* tv = tv_orig - delta */
+	timersub (&tv_orig, &delta, &tv);
+      }
+  } while (n < 0);
+
   if (!n)
     {
       /* Could be due to a different error, but we assume a timeout */
diff --git a/libfreeipmi/driver/ipmi-ssif-driver.c b/libfreeipmi/driver/ipmi-ssif-driver.c
index 83aa79f..6768b40 100644
--- a/libfreeipmi/driver/ipmi-ssif-driver.c
+++ b/libfreeipmi/driver/ipmi-ssif-driver.c
@@ -228,7 +228,7 @@ _ipmi_i2c_smbus_access (ipmi_ssif_ctx_t ctx,
 {
   struct ipmi_i2c_smbus_ioctl_data args;
   fd_set read_fds;
-  struct timeval tv;
+  struct timeval tv, tv_orig, start, end, delta;
   int n, rv;
 
   assert (ctx);
@@ -242,15 +242,40 @@ _ipmi_i2c_smbus_access (ipmi_ssif_ctx_t ctx,
       tv.tv_sec = IPMI_SSIF_TIMEOUT;
       tv.tv_usec = 0;
 
-      if ((n = select (dev_fd + 1,
-                       &read_fds,
-                       NULL,
-                       NULL,
-                       &tv)) < 0)
-        {
-          SSIF_ERRNO_TO_SSIF_ERRNUM (ctx, errno);
-          return (-1);
-        }
+      tv_orig.tv_sec = tv.tv_sec;
+      tv_orig.tv_usec = tv.tv_usec;
+
+      if (gettimeofday (&start, NULL) < 0)
+	{
+	  SSIF_ERRNO_TO_SSIF_ERRNUM (ctx, errno);
+	  return (-1);
+	}
+
+      do {
+	if ((n = select (dev_fd + 1,
+			 &read_fds,
+			 NULL,
+			 NULL,
+			 &tv)) < 0)
+	  {
+	    if (errno != EINTR)
+	      {
+		SSIF_ERRNO_TO_SSIF_ERRNUM (ctx, errno);
+		return (-1);
+	      }
+
+	    if (gettimeofday (&end, NULL) < 0)
+	      {
+		SSIF_ERRNO_TO_SSIF_ERRNUM (ctx, errno);
+		return (-1);
+	      }
+
+	    /* delta = end - start */
+	    timersub (&end, &start, &delta);
+	    /* tv = tv_orig - delta */
+	    timersub (&tv_orig, &delta, &tv);
+	  }
+      } while (n < 0);
 
       if (!n)
         {
diff --git a/libfreeipmi/driver/ipmi-sunbmc-driver.c b/libfreeipmi/driver/ipmi-sunbmc-driver.c
index ecd4b1d..546fbcb 100644
--- a/libfreeipmi/driver/ipmi-sunbmc-driver.c
+++ b/libfreeipmi/driver/ipmi-sunbmc-driver.c
@@ -489,7 +489,7 @@ _sunbmc_read (ipmi_sunbmc_ctx_t ctx,
   unsigned int rs_buf_len = 0;
 #endif /* !defined(HAVE_SYS_STROPTS_H) */
   fd_set read_fds;
-  struct timeval tv;
+  struct timeval tv, tv_orig, start, end, delta;
   int n;
 
   assert (ctx);
@@ -515,16 +515,41 @@ _sunbmc_read (ipmi_sunbmc_ctx_t ctx,
   tv.tv_sec = IPMI_SUNBMC_TIMEOUT;
   tv.tv_usec = 0;
 
-  if ((n = select (ctx->device_fd + 1,
-                   &read_fds,
-                   NULL,
-                   NULL,
-                   &tv)) < 0)
+  tv_orig.tv_sec = tv.tv_sec;
+  tv_orig.tv_usec = tv.tv_usec;
+
+  if (gettimeofday (&start, NULL) < 0)
     {
       SUNBMC_ERRNO_TO_SUNBMC_ERRNUM (ctx, errno);
       return (-1);
     }
 
+  do {
+    if ((n = select (ctx->device_fd + 1,
+		     &read_fds,
+		     NULL,
+		     NULL,
+		     &tv)) < 0)
+      {
+	if (errno != EINTR)
+	  {
+	    SUNBMC_ERRNO_TO_SUNBMC_ERRNUM (ctx, errno);
+	    return (-1);
+	  }
+
+	if (gettimeofday (&end, NULL) < 0)
+	  {
+	    SUNBMC_ERRNO_TO_SUNBMC_ERRNUM (ctx, errno);
+	    return (-1);
+	  }
+
+	/* delta = end - start */
+	timersub (&end, &start, &delta);
+	/* tv = tv_orig - delta */
+	timersub (&tv_orig, &delta, &tv);
+      }
+  } while (n < 0);
+
   if (!n)
     {
       /* Could be due to a different error, but we assume a timeout */
-- 
2.1.0

