

.\"#############################################################################
.\"$Id: ipmipower.8.pre.in,v 1.45.6.1 2009/04/23 17:26:24 chu11 Exp $
.\"#############################################################################
.\"  Copyright (C) 2007-2008 Lawrence Livermore National Security, LLC.
.\"  Copyright (C) 2003-2007 The Regents of the University of California.
.\"  Produced at Lawrence Livermore National Laboratory (cf, DISCLAIMER).
.\"  Written by Albert Chu <chu11@llnl.gov>
.\"  UCRL-CODE-155698
.\"  
.\"  This file is part of Ipmipower, a remote power control utility. 
.\"  For details, see http://www.llnl.gov/linux/.
.\"
.\"  Ipmipower is free software; you can redistribute it and/or modify it under
.\"  the terms of the GNU General Public License as published by the Free
.\"  Software Foundation; either version 2 of the License, or (at your option)
.\"  any later version.
.\"  
.\"  Ipmipower is distributed in the hope that it will be useful, but WITHOUT 
.\"  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
.\"  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
.\"  for more details.
.\"  
.\"  You should have received a copy of the GNU General Public License along
.\"  with Ipmipower.  If not, see <http://www.gnu.org/licenses/>.
.\"############################################################################
.TH ipmipower 8 "2009-11-30" "ipmipower 0.7.16" "System Commands"
.SH "NAME"
ipmipower \- IPMI power control utility
.SH "SYNOPSIS"
.B ipmipower
[\fIOPTION\fR...]
.SH "DESCRIPTION"
.B ipmipower
allows users to remotely power on, off, cycle, hard reset, get a power
status query, perform a pulse diagnostic interrupt, or initiate a
soft-shutdown of the OS via ACPI through the IPMI over LAN protocol.
.LP
When a power command (--on, --off, --cycle, --reset, --stat, --pulse,
or --soft) is specified on the command line,
.B ipmipower
will attempt to run the power command on all hostnames listed on the
command line then exit.
.LP
If no power commands are specified on the command line,
.B ipmipower
will run in interactive mode. Interactive mode gives the user a
command line interface to enter various commands. Details of the
interactive command line interface can be found below under
INTERACTIVE COMMANDS.
.LP
See EXAMPLES below for examples of how ipmipower is commonly used.
.SH "GENERAL OPTIONS"
The following options are general options for configuring IPMI
communication and executing general tool commands.
.TP
\fB\-D\fR, \fB\-\-driver\-type\fR=\fIIPMIDRIVER\fR
Specify the driver type to use instead of doing an auto selection.
The currently available outofband drivers are LAN and LAN_2_0, which
perform IPMI 1.5 and IPMI 2.0 respectively.
.TP
\fB\-h\fR, \fB\-\-hostname\fR=\fIIPMIHOST1,IPMIHOST2,...\fR
Specify the remote host(s) to communicate with. Multiple hostnames
may be separated by comma or may be specified in a range format; see
HOSTRANGED SUPPORT below.
.TP
\fB\-u\fR, \fB\-\-username\fR=\fIUSERNAME\fR
Specify the username to use when authenticating with the remote host.
If not specified, a null (i.e. anonymous) username is assumed. The
user must have atleast OPERATOR privileges to run the --on, --off,
--reset, --cycle, --pulse, or --soft power control commands. The user
must have atleast USER privileges to determine the power status of the
machine through --stat.
.TP
\fB\-p\fR, \fB\-\-password\fR=\fIPASSWORD\fR
Specify the password to use when authenticationg with the remote host.
If not specified, a null password is assumed. Maximum password length
is 16 for IPMI 1.5 and 20 for IPMI 2.0.
.TP
\fB\-P\fR, \fB\-\-password-prompt\fR
Prompt for password to avoid possibility of listing
it in process lists.
.TP
\fB\-k\fR, \fB\-\-k-g\fR=\fIK_G\fR
Specify the K_g BMC key to use when authenticating with the remote
host for IPMI 2.0. If not specified, a null key is assumed. To input
the key in hexadecimal form, prefix the string with '0x'. E.g., the
key 'abc' can be entered with the either the string 'abc' or the
string '0x616263'
.TP
\fB\-K\fR, \fB\-\-k-g-prompt\fR
Prompt for k-g to avoid possibility of listing it in process lists.
.TP
\fB\-\-session-timeout\fR=\fIMILLISECONDS\fR
Specify the session timeout in milliseconds. Defaults to 20000
milliseconds (20 seconds) if not specified.
.TP
\fB\-\-retransmission-timeout\fR=\fIMILLISECONDS\fR
Specify the packet retransmission timeout in milliseconds. Defaults
to 400 milliseconds (0.4 seconds) if not specified.
.TP
\fB\-a\fR, \fB\-\-authentication\-type\fR=\fIAUTHENTICATION-TYPE\fR
Specify the IPMI 1.5 authentication type to use. The currently
available authentication types are NONE, STRAIGHT_PASSWORD_KEY, MD2,
and MD5. Defaults to MD5 if not specified.
.TP
\fB\-I\fR, \fB\-\-cipher\-suite-id\fR=\fICIPHER-SUITE-ID\fR
Specify the IPMI 2.0 cipher suite ID to use. The Cipher Suite ID
identifies a set of authentication, integrity, and confidentiality
algorithms to use for IPMI 2.0 communication. The authentication
algorithm identifies the algorithm to use for session setup, the
integrity algorithm identifies the algorithm to use for session packet
signatures, and the confidentiality algorithm identifies the algorithm
to use for payload encryption. Defaults to cipher suite ID 3 if not
specified. The following cipher suite ids are currently supported:
.sp
0 - Authentication Algorithm = None; Integrity Algorithm = None; Confidentiality Algorithm = None
.sp
1 - Authentication Algorithm = HMAC-SHA1; Integrity Algorithm = None; Confidentiality Algorithm = None
.sp
2 - Authentication Algorithm = HMAC-SHA1; Integrity Algorithm = HMAC-SHA1-96; Confidentiality Algorithm = None
.sp
3 - Authentication Algorithm = HMAC-SHA1; Integrity Algorithm = HMAC-SHA1-96; Confidentiality Algorithm = AES-CBC-128
.\" .sp
.\" 4 - Authentication Algorithm = HMAC-SHA1; Integrity Algorithm = HMAC-SHA1-96; Confidentiality Algorithm = xRC4-128
.\" .sp
.\" 5 - Authentication Algorithm = HMAC-SHA1; Integrity Algorithm = HMAC-SHA1-96; Confidentiality Algorithm = xRC4-40
.sp
6 - Authentication Algorithm = HMAC-MD5; Integrity Algorithm = None; Confidentiality Algorithm = None
.sp
7 - Authentication Algorithm = HMAC-MD5; Integrity Algorithm = HMAC-MD5-128; Confidentiality Algorithm = None
.sp
8 - Authentication Algorithm = HMAC-MD5; Integrity Algorithm = HMAC-MD5-128; Confidentiality Algorithm = AES-CBC-128
.\" .sp
.\" 9 - Authentication Algorithm = HMAC-MD5; Integrity Algorithm = HMAC-MD5-128; Confidentiality Algorithm = xRC4-128
.\" .sp
.\" 10 - Authentication Algorithm = HMAC-MD5; Integrity Algorithm = HMAC-MD5-128; Confidentiality Algorithm = xRC4-40
.sp
11 - Authentication Algorithm = HMAC-MD5; Integrity Algorithm = MD5-128; Confidentiality Algorithm = None
.sp
12 - Authentication Algorithm = HMAC-MD5; Integrity Algorithm = MD5-128; Confidentiality Algorithm = AES-CBC-128
.\" .sp
.\" 13 - Authentication Algorithm = HMAC-MD5; Integrity Algorithm = MD5-128; Confidentiality Algorithm = xRC4-128
.\" .sp
.\" 14 - Authentication Algorithm = HMAC-MD5; Integrity Algorithm = MD5-128; Confidentiality Algorithm = xRC4-40
.TP
\fB\-l\fR, \fB\-\-privilege\-level\fR=\fIPRIVILEGE\-LEVEL\fR
Specify the privilege level to be used. The currently available
privilege levels are USER, OPERATOR, and ADMIN. Defaults to OPERATOR
if not specified.
.TP
\fB\-\-config\-file\fR=\fIFILE\fR
Specify an alternate configuration file.
.TP
\fB\-W\fR, \fB\-\-workaround\-flags\fR=\fIWORKAROUNDS\fR
Specify workarounds to vendor compliance issues. Multiple workarounds
can be specified separated by commas. See WORKAROUNDS below for a
list of available workarounds.
.TP
\fB\-\-debug\fR
Turn on debugging.
.TP
\fB\-?\fR, \fB\-\-help\fR
Output a help list and exit.
.TP
\fB\-\-usage\fR
Output a usage message and exit.
.TP
\fB\-V\fR, \fB\-\-version\fR
Output the program version and exit.
.if 1 \{
.TP
\fB\-\-rmcpdump\fR
Turn on RMCP packet dump output. Warning, the dump output can get
extremely long.
\}
.SH "IPMIPOWER OPTIONS"
The following options are specific to
.B ipmipower.
.TP
\fB\-n\fR, \fB\-\-on\fR
Power on the target hosts.
.TP
\fB\-f\fR, \fB\-\-off\fR
Power off the target hosts.
.TP
\fB\-c\fR, \fB\-\-cycle\fR
Power cycle the target hosts.
.TP
\fB\-r\fR, \fB\-\-reset\fR
Reset the target hosts.
.TP
\fB\-s\fR, \fB\-\-stat\fR
Get power status of the target hosts.
.TP
\fB\-j\fR, \fB\-\-pulse\fR
Send power diagnostic interrupt to target hosts.
.TP
\fB\-m\fR, \fB\-\-soft\fR
Initiate a soft-shutdown of the OS via ACPI.
.TP
\fB\-g\fR, \fB\-\-on\-if\-off\fR
The IPMI specification does not require the power cycle or hard reset
commands to turn on a machine that is currently powered off. This
option will force
.B ipmipower
to issue a power on command instead of a power cycle or hard reset
command if the remote machine's power is currently off.
.TP
\fB\-A\fR, \fB\-\-wait\-until\-on\fR
The IPMI specification allows power on commands to return prior to the
power on actually taking place. This option will force
.B ipmipower
to regularly query the remote BMC and return only after the machine
has powered on.
.TP
\fB\-G\fR, \fB\-\-wait\-until\-off\fR
The IPMI specification allows power off commands to return prior the
power off actually taking place. This option will force
.B ipmipower
to regularly query the remote BMC and return only after the machine
has powered off.
.SH "IPMIPOWER ADVANCED NETWORK OPTIONS"
The following options are used to change the networking behavior of
.B ipmipower.
.TP
\fB\-q\fR, \fB\-\-retransmission\-wait\-timeout\fR=\fBMILLISECONDS\fR
Specify the retransmission wait timeout length in milliseconds. The
retransmission wait timeout is similar to the retransmission timeout
above, but is used specifically for power completion verification with
the \fB\-\-wait\-until\-on\fR and \fB\-\-wait\-until\-off\fR options.
Defaults to 500 milliseconds (0.5 seconds).
.TP
\fB\-b\fR, \fB\-\-retransmission\-backoff\-count\fR=\fBCOUNT\fR
Specify the retransmission backoff count for retransmissions. After
ever COUNT retransmissions, the retransmission timeout length will be
increased by another factor. Defaults to 8.
.TP
\fB\-i\fR, \fB\-\-ping\-interval\fR=\fBMILLISECONDS\fR
Specify the ping interval length in milliseconds. When running in
interactive mode, RMCP (Remote Management Control Protocol) discovery
messages will be sent to all configured remote hosts every
MILLISECONDS to confirm their support of IPMI. Power commands cannot
be sent to a host until it is discovered (or re-discovered if
previously lost). Defaults to 5000 milliseconds (5 seconds). Ping
discovery messages can be disabled by setting this valu to 0. RMCP
ping discovery messages are automatically disabled in non-interactive
mode.
.TP
\fB\-z\fR, \fB\-\-ping\-timeout\fR=\fBMILLISECONDS\fR
Specify the ping timeout length in milliseconds. When running in
interactive mode, RMCP (Remote Management Control Protocol) messages
discovery will be sent to all configured remote hosts to confirm their
support of IPMI. A remote host is considered undiscovered if the host
does not respond in MILLISECONDS time. Defaults to 30000 milliseconds
(30 seconds). The ping timeout cannot be larger than the ping interval.
.TP
\fB\-v\fR, \fB\-\-ping\-packet\-count\fR=\fBCOUNT\fR
Specify the ping packet count size. Defaults to 10. See the
\fB\-\-ping-percent\-fR option below for more information on this
option.
.TP
\fB\-w\fR, \fB\-\-ping\-percent\fR=\fBPERCENT\fR
Specify the ping percent value. Defaults to 50.
Since IPMI is based on UDP, it is
difficult for
.B ipmipower
to distinguish between a missing machine and a bad (or heavily loaded)
network connection in interactive mode. when running in interactive
mode. For example, suppose a link consistently drops 80% of the
packets to a particular machine. The power control operation may have
difficulty completing, although a recent pong response from RMCP makes
.B ipmipower
believe the machine is up and functioning properly.
The ping packet acount and percent options are used to alleviate this
problem.
.B Ipmipower
will monitor RMCP ping packets in packet count chunks. If
.B ipmipower
does not receive a response to greater than ping percent of those
packets,
.B ipmipower
will assume the link to this node is bad and will not send power
control operations to that node until the connection is determined to
be reliable. This heuristic can be disabled by setting either the
ping packet count or ping percent to 0. This feature is not used if
ping interval is set to 0.
.TP
\fB\-x\fR, \fB\-\-ping\-consec\-count\fR=\fBCOUNT\fR
Specify the ping consecutive count. This is another heuristic used to
determine if a node should be considered discovered, undiscovered, or
with a bad connection. If a valid RMCP pong response was received for
the last COUNT ping packets, a node will be considered discovered,
regardless of other heuristics listed above. Defaults to 5. This
heuristic can be disabled by setting this value to 0. This feature is
not used if other ping features described above are disabled.
.LP
.SH "HOSTRANGED OPTIONS"
The following options manipulate hostranged output. See HOSTRANGED
SUPPORT below for additional information on hostranges.
.TP
\fB\-B\fR, \fB\-\-buffer-output\fR
Buffer hostranged output. For each node, buffer standard output until
the node has completed its IPMI operation. When specifying this
option, data may appear to output slower to the user since the the
entire IPMI operation must complete before any data can be output.
See HOSTRANGED SUPPORT below for additional information.
.TP
\fB\-C\fR, \fB\-\-consolidate-output\fR
Consolidate hostranged output. The complete standard output from
every node specified will be consolidated so that nodes with identical
output are not output twice. A header will list those nodes with the
consolidated output. When this option is specified, no output can be
seen until the IPMI operations to all nodes has completed. If the
user breaks out of the program early, all currently consolidated
output will be dumped. See HOSTRANGED SUPPORT below for additional
information.
.TP
\fB\-F\fR, \fB\-\-fanout\fR
Specify multiple host fanout. Indicates the maximum number of power
control operations that can be executed in parallel.
.TP
\fB\-E\fR, \fB\-\-eliminate\fR
Eliminate hosts determined as undetected by
.B ipmidetect.
This attempts to remove the common issue of hostranged execution
timing out due to several nodes being removed from service in a large
cluster. The
.B ipmidetectd
daemon must be running on the node executing the command.
.TP
\fB\-\-always\-prefix\fR
Always prefix output, even if only one host is specified or
communicating in-band. This option is primarily useful for
scripting purposes. Option will be ignored if specified with
the \fB\-C\fR option.
.LP
.SH "INTERACTIVE COMMANDS"
.B ipmipower
provides the following interactive commands at the ipmipower> prompt.
Before any power commands (on, off, cycle, reset, stat, pulse, or
soft) can be used, hostnames must be configured into
.B ipmipower,
either through the command prompt or the hostname command below. The
parameters and options to the commands below mirror their appropriate
command line options.
.TP
\fBhostname\fR \fI[IPMIHOST(s)]\fR
Specify a new set of hosts. No input to unconfigure all hosts.
.TP
\fBusername\fR \fI[USERNAME]\fR
Specify a new username. No input for null username.
.TP
\fBpassword\fR \fI[PASSWORD]\fR
Specify a new password. No input for null password.
.TP
\fBk_g\fR \fI[K_G]\fR
Specify a new K_g BMC Key. No input for null key. Prefix with '0x'
to enter a key in hexadecimal
.TP
\fBipmi-version\fR \fIIPMIVERSION\fR
Specify the ipmi version to use.
.TP
\fBsession-timeout\fR \fIMILLISECONDS\fR
Specify a new session timeout length.
.TP
\fBretransmission-timeout\fR \fIMILLISECONDS\fR
Specify a new retransmiision timeout length.
.TP
\fBauthentication-type\fR \fIAUTHENTICATION-TYPE\fR
Specify the authentication type to use.
.TP
\fBcipher-suite-id\fR \fICIPHER-SUITE-ID\fR
Specify the cipher suite id to use.
.TP
\fBprivilege-level\fR \fIPRIVILEGE-LEVEL\fR
Specify the privilege level to use.
.TP
\fBworkaround-flags\fR \fIWORKAROUNDS\fR
Specify workaround flags.
.TP
\fBdebug\fR \fI[on|off]\fR
Toggle debug output.
.if 1 \{
.TP
\fBrmcpdump\fR \fI[on|off]\fR
Toggle RMCP dump output.
\}
.TP
\fBon\fR \fI[IPMIHOST(s)]\fR
Turn on all configured hosts or specified hosts.
.TP
\fBoff\fR \fI[IPMIHOST(s)]\fR
Turn off all configured hosts or specified hosts.
.TP
\fBcycle\fR \fI[IPMIHOST(s)]\fR
Power cycle all configured hosts or specified hosts.
.TP
\fBreset\fR \fI[IPMIHOST(s)]\fR
Reset all configured hosts or specified hosts.
.TP
\fBstat\fR \fI[IPMIHOST(s)]\fR
Query power status for all configured hosts or specified hosts.
.TP
\fBpulse\fR \fI[IPMIHOST(s)]\fR
Pulse diagnostic interrupt all configured hosts or specified hosts.
.TP
\fBsoft\fR \fI[IPMIHOST(s)]\fR
Initiate a soft-shutdown for all configured hosts or specified hosts.
.TP
\fBidentify-on\fR \fI[IPMIHOST(s)]\fR
Turn on physical system identification.
.TP
\fBidentify-off\fR \fI[IPMIHOST(s)]\fR
Turn off physical system identification.
.TP
\fBidentify-status\fR \fI[IPMIHOST(s)]\fR
Query physical system identification status.
.TP
\fBon-if-off\fR \fI[on|off]\fR
Toggle on-if-off functionality.
.TP
\fBwait-until-on\fR \fI[on|off]\fR
Toggle wait-until-on functionality.
.TP
\fBwait-until-off\fR \fI[on|off]\fR
Toggle wait-until-off functionality.
.TP
\fBretransmission-wait-timeout\fR \fIMILLISECONDS\fR
Specify a new retransmission wait timeout length.
.TP
\fBretransmission-backoff-count\fR \fICOUNT\fR
Specify a new retransmission backoff count.
.TP
\fBping-interval\fR \fIMILLISECONDS\fR
Specify a new ping interval length.
.TP
\fBping-timeout\fR \fIMILLISECONDS\fR
Specify a new ping timeout length.
.TP
\fBping-packet-count\fR \fICOUNT\fR
Specify a new ping packet count.
.TP
\fBping-percent\fR \fIPERCENT\fR
Specify a new ping percent.
.TP
\fBping-consec-count\fR \fICOUNT\fR
Specify a new ping consec count.
.TP
\fBbuffer-output\fR \fI[on|off]\fR
Toggle buffer-output functionality.
.TP
\fBconsolidate-output\fR \fI[on|off]\fR
Toggle consolidate-output functionality.
.TP
\fBfanout\fR \fICOUNT\fR
Specify a fanout.
.TP
\fBalways-prefix\fR \fI[on|off]\fR
Toggle always-prefix functionality.
.TP
\fBhelp\fR
Output help menu.
.TP
\fBversion\fR
Output version.
.TP
\fBconfig\fR
Output the current configuration.
.TP
\fBquit\fR
Quit program.
.B ipmipower.
.SH "HOSTRANGED SUPPORT"
Multiple hosts can be input either as an explicit comma separated
lists of hosts or a range of hostnames in the general form:
prefix[n-m,l-k,...], where n < m and l < k, etc. The later form
should not be confused with regular expression character classes (also
denoted by []). For example, foo[19] does not represent foo1 or foo9,
but rather represents a degenerate range: foo19.
.LP
This range syntax is meant only as a convenience on clusters with a
prefixNN naming convention and specification of ranges should not be
considered necessary -- the list foo1,foo9 could be specified as such,
or by the range foo[1,9].
.LP
Some examples of range usage follow:
.nf
    foo[01-05] instead of foo01,foo02,foo03,foo04,foo05
    foo[7,9-10] instead of foo7,foo9,foo10
    foo[0-3] instead of foo0,foo1,foo2,foo3
.fi
.LP
As a reminder to the reader, some shells will interpret brackets ([
and ]) for pattern matching. Depending on your shell, it may be
necessary to enclose ranged lists within quotes.
.LP
By default, standard output from each node specified will be output
with the hostname prepended to each line. Although this output is
readable in many situations, it may be difficult to read in other
situations. For example, output from multiple nodes may be mixed
together. The \fB\-B\fR and \fB\-C\fR options can be used to change
this default.
.SH "EXAMPLES"
.LP
Determine the power status of foo[0-2] with null username and password
        ipmipower -h foo[0-2] --stat
.LP
Determine the power status of foo[0-2] with non-null username and password
        ipmipower -h foo[0-2] -u foo -p bar --stat
.LP
Hard reset nodes foo[0-2] with non-null username and password
        ipmipower -h foo[0-2] -u foo -p bar --reset
.SH "GENERAL TROUBLESHOOTING"
Most often, IPMI over LAN problems involve a misconfiguration of the
remote machine's BMC.  Double check to make sure the following are
configured properly in the remote machine's BMC: IP address, MAC
address, subnet mask, username, user enablement, user privilege,
password, LAN privilege, LAN enablement, and allowed authentication
type(s). For IPMI 2.0 connections, double check to make sure the
cipher suite privilege(s) and K_g key are configured properly. The
.B bmc-config(8)
tool can be used to check and/or change these configuration
settings.
.LP
The following are common issues for given error messages:
.LP
"username invalid" - The username entered (or a NULL username if none
was entered) is not available on the remote machine. It may also be
possible the remote BMC's username configuration is incorrect.
.LP
"password invalid" - The password entered (or a NULL password if none
was entered) is not correct. It may also be possible the password for
the user is not correctly configured on the remote BMC.
.LP
"password verification timeout" - Password verification has timed out.
A "password invalid" error (described above) or a generic "session
timeout" (described below) occurred.  During this point in the
protocol it cannot be differentiated which occurred.
.LP
"k_g invalid" - The K_g key entered (or a NULL K_g key if none was
entered) is not correct. It may also be possible the K_g key is not
correctly configured on the remote BMC.
.LP
"privilege level insufficient" - An IPMI command requires a higher
user privilege than the one authenticated with. Please try to
authenticate with a higher privilege. This may require authenticating
to a different user which has a higher maximum privilege.
.LP
"privilege level cannot be obtained for this user" - The privilege
level you are attempting to authenticate with is higher than the
maximum allowed for this user. Please try again with a lower
privilege. It may also be possible the maximum privilege level
allowed for a user is not configured properly on the remote BMC.
.LP
"authentication type unavailable for attempted privilege level" - The
authentication type you wish to authenticate with is not available for
this privilege level. Please try again with an alternate
authentication type or alternate privilege level. It may also be
possible the available authentication types you can authenticate with
are not correctly configured on the remote BMC.
.LP
"cipher suite id unavailable" - The cipher suite id you wish to
authenticate with is not available on the remote BMC. Please try
again with an alternate cipher suite id. It may also be possible the
available cipher suite ids are not correctly configured on the remote
BMC.
.LP
"ipmi 2.0 unavailable" - IPMI 2.0 was not discovered on the remote
machine. Please try to use IPMI 1.5 instead.
.LP
"connection timeout" - Initial IPMI communication failed. A number of
potential errors are possible, including an invalid hostname
specified, an IPMI IP address cannot be resolved, IPMI is not enabled
on the remote server, the network connection is bad, etc. Please
verify configuration and connectivity.
.LP
"session timeout" - The IPMI session has timed out. Please reconnect.
.LP
If IPMI over LAN continually times out, you may wish to increase the
retransmission timeout. Some remote BMCs are considerably slower than
others.
.LP
Please see WORKAROUNDS below to also if there are any vendor specific
bugs that have been discovered and worked around.
.SH "IPMIPOWER TROUBLESHOOTING"
When powering on a powered off machine, the client must have a means
by which to resolve the MAC address of the remote machine's ethernet
card. This is typically done in one of two ways.
.LP
1) Enable gratuitous ARPs on the remote machine. The remote machine
will send out a gratuitous ARP, which advertises the ethernet IP and
MAC address so that other machines on the network this information
their local ARP cache. For large clusters, this method is not
recommended since gratuitous ARPs can flood the network with
unnecessary traffic.
.LP
2) Permanently store the remote machine's MAC address in the local ARP
cache. This is the more common approach on large clusters.
.LP
Other methods are listed in the IPMI specification.
.LP
If
.B ipmipower
is running a tad slow when running a power control command on the
commandline (compared to running a power control command in
interactive mode), hostname IP resolution may be slowing the startup
code down. Hostname resolution tuning may help make
.B ipmipower
execute faster on the commandline. This performance problem should
not matter when running in interactive mode or with
.B powerman,
since it is a one-time setup cost.
.SH "WORKAROUNDS"
With so many different vendors implementing their
own IPMI solutions, different vendors may implement their IPMI
protocols incorrectly. The following lists the handful of
compliance issues discovered and the workarounds currently
supported.
.LP
When possible, workarounds have been implemented so they will be
transparent to the user. However, some will require the user to
specify a workaround be used via the -W option.
.LP
The hardware listed below may only indicate the hardware that a
problem was discovered on. Newer versions of hardware may fix the
problems indicated below. Similar machines from vendors may or may
not exhibit the same problems.
.LP
Intel SR870BN4: BMCs would not respond to retransmissions of a Get
Session Challenge Request if a previous Get Session Challenge response
was lost. Resolved by sending retransmitted Get Session Challenge
requests from a different source port. Automatically handled.
.LP
Tyan S2882 with m3289 BMC: After the IPMI session is brought up,
packet responses return empty session IDs to the client. This will
likely cause "session timeout" errors to occur. In order to work
around this issue, the "idzero" workaround must be specified. The
option will allow empty session IDs to be accepted by the client.
.LP
Dell PowerEdge 2850,SC1425: When Per-Message Authentication is
disabled, packet responses contain non-null authentication data (when
it should in fact be null). This will likely cause "session timeout"
errors to occur. In order to work around this issue, the
"unexpectedauth" workaround must be specified. The option will allow
unexpected non-null authcodes to be checked as though they were
expected. This compliance bug is confirmed to be fixed on newer
firmware.
.LP
IBM eServer 325: The remote BMC will advertise that Per Message
Authentication is disabled, but actually require it for the protocol.
This will likely cause "session timeout" errors to occur. In order to
work around this issue, the "forcepermsg" workaround must be
specified. The option will force Per Message Authentication to be
used no matter what is advertised by the remote BMC.
.LP
Supermicro H8QME with SIMSO daughter card: The remote BMC will
advertise that Per Message Authentication is disabled, but actually
require it for the protocol. Automatically handled.
.LP
Asus P5M2/P5MT-R/RS162-E4/RX4: The motherboard does not properly
report username capabilities and/or K_g status. This will likely
cause "username invalid" or "k_g invalid" errors to occur. In order
to work around this issue, the "authcap" workaround must be specified.
.LP
Intel SR1520ML/X38ML: The motherboard does not properly report
username capabilities and/or K_g status. This will likely cause
"username invalid" or "k_g invalid" errors to occur. In order to work
around this issue, the "authcap" workaround must be specified.
.LP
Sun ILOM 1.0/2.0: The session sequence numbers returned for IPMI 1.5
sessions are the wrong endian on some systems running ILOM 1.0/2.0.
The incorrect endian depends on the service processor endianness.
This will likely cause "session timeout" errors to occur. In order to
work around this issue, the "endianseq" workaround must be specified.
.LP
Sun Fire 2200/4150/4450 with ELOM: The motherboard does not properly
report username capabilities. This will likely cause "username
invalid" errors to occur.  In order to work around this issue, the
"authcap" workaround must be specified.
.LP
Intel SE7520AF2 with Intel Server Management Module (Professional
Edition): There are a number of Intel IPMI 2.0 authentication bugs.
These problems may cause "username invalid", "password invalid", or
"k_g invalid" errors to occur. They can be worked around by
specifying the "intel20" workaround. The workarounds include padding
of usernames, automatic acceptance of a RAKP 4 response integrity
check when using the integrity algorithm MD5-128, and password
truncation if the authentication algorithm is HMAC-MD5-128.
.LP
Supermicro H8QME with SIMSO daughter card: There are several
Supermicro IPMI 2.0 bugs on early firmware revisions which can be
worked around using the "supermicro20" workaround. These problems may
cause "password invalid" errors to occur. These compliance bugs are
confirmed to be fixed on newer firmware.
.LP
Sun Fire 4100/4200/4500 with ILOM: There are several Sun IPMI 2.0
bugs. These problems may cause "password invalid" or "bmc error"
errors to occur. They can be worked around by specifying the "sun20"
workaround. The workarounds include handling invalid lengthed hash
keys, improperly hashed keys, and invalid cipher suite records.
.LP
Inventec 5441, Supermicro X8DTH: The privilege level sent during the
Open Session stage of an IPMI 2.0 connection is used for hashing keys
instead of the privilege level sent during the RAKP1 connection stage.
This may cause "password invalid" or "bad rmcpplus status code" errors
to occur. It can be worked around by specifying the "opensesspriv"
workaround.
.SH "KNOWN ISSUES"
On older operating systems, if you input your username, password,
and other potentially security relevant information on the command
line, this information may be discovered by other users when using
tools like the
.B ps(1)
command or looking in the /proc file system. It is generally more
secure to input password information with options like the -P or -K
options. Configuring security relevant information in the FreeIPMI
configuration file would also be an appropriate way to hide this information.
.LP
In order to prevent brute force attacks, some BMCs will temporarily
"lock up" after a number of remote authentication errors. You may
need to wait awhile in order to this temporary "lock up" to pass
before you may authenticate again.
.LP
IPMI specifications do not require BMCs to perform a power control
operation before returning a completion code to the caller.
Therefore, it is possible for
.B ipmipower
to return power status queries opposite of what you are expecting.
For example, if a "power off" operation is performed, a BMC may return
a successful completion code to
.B ipmipower
before the "power off" operation is actually performed. Subsequent
power status queries may return "on" for several seconds, until the
BMC actually performs the "power off" operation.
.LP
.if 1 \{
This version of ipmipower was compiled with debugging. When compiled
with debugging,
.B ipmipower
is insecure. The following were intentionally
left in
.B ipmipower
for debugging purposes:
.LP
.IP o 2
Sensitive command line arguments are not cleared from memory.
.IP o
Core dumps are enabled.
.IP o
In interactive mode, commands may output sensitive information
to stdout.
.LP
Before placing ipmipower in a production system, it is recommended
that the program be compiled with debugging turned off.
\}
.SH "REPORTING BUGS"
Report bugs to <freeipmi\-users@gnu.org> or <freeipmi\-devel@gnu.org>.
.SH COPYRIGHT
Copyright (C) 2007-2008 Lawrence Livermore National Security, LLC.
.br
Copyright (C) 2003-2007 The Regents of the University of California.
.PP
This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or (at
your option) any later version.
.SH "SEE ALSO"
freeipmi.conf(5), freeipmi(7), bmc-config(8)
.PP
http://www.gnu.org/software/freeipmi/
